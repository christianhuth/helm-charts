{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "description": "Affinity settings for pod assignment",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "audiobookshelf": {
      "properties": {
        "backup": {
          "properties": {
            "path": {
              "default": "/backups",
              "description": "Path to where backups are stored. Backups contain a backup of the database in /config and images/metadata stored in ./metadata/items and ./metadata/authors",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "persistence": {
              "properties": {
                "accessModes": {
                  "description": "the desired access modes the volume should have.",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "description": "Annotations to be added to the PersistentVolumeClaim",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "use a PVC to persist the backup directory",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "provide an existing PersistentVolumeClaim",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "resources": {
                  "description": "represents the minimum and maximum resources the volume should have.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Name of the StorageClass required by the claim.",
                  "required": [],
                  "title": "storageClassName",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "accessModes",
                "annotations",
                "existingClaim",
                "storageClassName",
                "resources"
              ],
              "title": "persistence",
              "type": "object"
            }
          },
          "required": [
            "path",
            "persistence"
          ],
          "title": "backup",
          "type": "object"
        },
        "config": {
          "properties": {
            "path": {
              "default": "/config",
              "description": "Path to the config directory. It will contain the database (users/books/libraries/settings). This location must not be mounted over the network.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "persistence": {
              "properties": {
                "accessModes": {
                  "description": "the desired access modes the volume should have.",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "description": "Annotations to be added to the PersistentVolumeClaim",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "use a PVC to persist the config directory",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "provide an existing PersistentVolumeClaim",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "resources": {
                  "description": "represents the minimum and maximum resources the volume should have.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Name of the StorageClass required by the claim.",
                  "required": [],
                  "title": "storageClassName",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "accessModes",
                "annotations",
                "existingClaim",
                "storageClassName",
                "resources"
              ],
              "title": "persistence",
              "type": "object"
            }
          },
          "required": [
            "path",
            "persistence"
          ],
          "title": "config",
          "type": "object"
        },
        "library": {
          "properties": {
            "path": {
              "default": "/library",
              "description": "Path to the library directory. It will contain the library files. This location must not be mounted over the network.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "persistence": {
              "properties": {
                "accessModes": {
                  "description": "the desired access modes the volume should have.",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "description": "Annotations to be added to the PersistentVolumeClaim",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "use a PVC to persist the config directory",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "provide an existing PersistentVolumeClaim",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "resources": {
                  "description": "represents the minimum and maximum resources the volume should have.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Name of the StorageClass required by the claim.",
                  "required": [],
                  "title": "storageClassName",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "accessModes",
                "annotations",
                "existingClaim",
                "storageClassName",
                "resources"
              ],
              "title": "persistence",
              "type": "object"
            }
          },
          "required": [
            "path",
            "persistence"
          ],
          "title": "library",
          "type": "object"
        },
        "metadata": {
          "properties": {
            "path": {
              "default": "/metadata",
              "description": "Path to the metadata directory. It will contain cache, streams, covers, downloads, backups and logs.",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "persistence": {
              "properties": {
                "accessModes": {
                  "description": "the desired access modes the volume should have.",
                  "items": {
                    "anyOf": [
                      {
                        "required": [],
                        "type": "string"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "accessModes",
                  "type": "array"
                },
                "annotations": {
                  "description": "Annotations to be added to the PersistentVolumeClaim",
                  "required": [],
                  "title": "annotations",
                  "type": "object"
                },
                "enabled": {
                  "default": true,
                  "description": "use a PVC to persist the metadata directory",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                },
                "existingClaim": {
                  "default": "",
                  "description": "provide an existing PersistentVolumeClaim",
                  "required": [],
                  "title": "existingClaim",
                  "type": "string"
                },
                "resources": {
                  "description": "represents the minimum and maximum resources the volume should have.",
                  "required": [],
                  "title": "resources",
                  "type": "object"
                },
                "storageClassName": {
                  "default": "",
                  "description": "Name of the StorageClass required by the claim.",
                  "required": [],
                  "title": "storageClassName",
                  "type": "string"
                }
              },
              "required": [
                "enabled",
                "accessModes",
                "annotations",
                "existingClaim",
                "storageClassName",
                "resources"
              ],
              "title": "persistence",
              "type": "object"
            }
          },
          "required": [
            "path",
            "persistence"
          ],
          "title": "metadata",
          "type": "object"
        },
        "nodeEnv": {
          "default": "production",
          "description": "Type of deployment. Should be production unless using development.",
          "required": [],
          "title": "nodeEnv",
          "type": "string"
        },
        "podcast": {
          "properties": {
            "downloadTimeout": {
              "default": "30",
              "description": "Timeout to wait for a podcast to start downloading.",
              "required": [],
              "title": "downloadTimeout",
              "type": "string"
            }
          },
          "required": [
            "downloadTimeout"
          ],
          "title": "podcast",
          "type": "object"
        },
        "query": {
          "properties": {
            "logging": {
              "default": "",
              "description": "Debug information for logging SQL queries. Use log to log the queries, and benchmark to also log the runtime of each query.",
              "required": [],
              "title": "logging",
              "type": "string"
            },
            "profiling": {
              "default": "",
              "description": "Experimental profiling of specific database queries. Not implemented on most queries.",
              "required": [],
              "title": "profiling",
              "type": "string"
            }
          },
          "required": [
            "logging",
            "profiling"
          ],
          "title": "query",
          "type": "object"
        },
        "source": {
          "default": "Helm",
          "description": "Installation source. Will be shown in the web client.",
          "required": [],
          "title": "source",
          "type": "string"
        },
        "sqlite": {
          "properties": {
            "cacheSize": {
              "default": "",
              "description": "Set the cache_size pragma for the SQLite database",
              "required": [],
              "title": "cacheSize",
              "type": "string"
            },
            "mmapSize": {
              "default": "",
              "description": "Set the mmap_size pragma for the SQLite database",
              "required": [],
              "title": "mmapSize",
              "type": "string"
            },
            "tempStore": {
              "default": "",
              "description": "Set the temp_store pragma for the SQLite database",
              "required": [],
              "title": "tempStore",
              "type": "string"
            }
          },
          "required": [
            "cacheSize",
            "mmapSize",
            "tempStore"
          ],
          "title": "sqlite",
          "type": "object"
        },
        "timezone": {
          "default": "Europe/Berlin",
          "description": "specify the time zone. Check list: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
          "required": [],
          "title": "timezone",
          "type": "string"
        }
      },
      "required": [
        "backup",
        "config",
        "library",
        "metadata",
        "nodeEnv",
        "podcast",
        "query",
        "source",
        "sqlite",
        "timezone"
      ],
      "title": "audiobookshelf",
      "type": "object"
    },
    "autoscaling": {
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage"
      ],
      "title": "autoscaling",
      "type": "object"
    },
    "extraEnv": {
      "description": "additional environment variables to be added to the pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"argocd-extension-metrics.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "default": "Always",
          "description": "image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "image registory",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "advplyr/audiobookshelf",
          "description": "image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "2.30.0",
          "description": "Overrides the image tag",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "annotations",
        "className",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `argocd-extension-metrics`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "pod-level security context",
      "properties": {
        "fsGroup": {
          "default": 1000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        }
      },
      "required": [
        "fsGroup"
      ],
      "title": "podSecurityContext",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "description": "Resource limits and requests for the controller pods.",
      "properties": {
        "requests": {
          "properties": {
            "cpu": {
              "default": "100m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "100Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [
            "cpu",
            "memory"
          ],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [
        "requests"
      ],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 0,
      "description": "The number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "securityContext": {
      "description": "container-level security context",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "properties": {
            "drop": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [
            "drop"
          ],
          "title": "capabilities",
          "type": "object"
        },
        "privileged": {
          "default": false,
          "required": [],
          "title": "privileged",
          "type": "boolean"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        },
        "seccompProfile": {
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "seccompProfile",
          "type": "object"
        }
      },
      "required": [
        "allowPrivilegeEscalation",
        "capabilities",
        "privileged",
        "readOnlyRootFilesystem",
        "runAsNonRoot",
        "runAsGroup",
        "runAsUser",
        "seccompProfile"
      ],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "properties": {
        "port": {
          "default": 8080,
          "description": "Kubernetes port where service is exposed",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Kubernetes service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "tolerations": {
      "description": "Toleration labels for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "image",
    "imagePullSecrets",
    "replicaCount",
    "revisionHistoryLimit",
    "podSecurityContext",
    "resources",
    "autoscaling",
    "securityContext",
    "service",
    "ingress",
    "serviceAccount",
    "nodeSelector",
    "tolerations",
    "affinity",
    "extraEnv",
    "audiobookshelf"
  ],
  "type": "object"
}
