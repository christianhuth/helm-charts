{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "description": "Affinity settings for pod assignment",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "extraEnv": {
      "description": "additional environment variables to be added to the pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"goldpinger.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "goldpinger": {
      "properties": {
        "displayNodename": {
          "default": true,
          "description": "Display nodename other than podname in UI",
          "required": [],
          "title": "displayNodename",
          "type": "boolean"
        },
        "externalTargets": {
          "properties": {
            "dns": {
              "properties": {
                "targets": {
                  "default": "",
                  "description": "A space delimited list of hosts to attempt dns resolve on",
                  "required": [],
                  "title": "targets",
                  "type": "string"
                },
                "timeout": {
                  "default": 500,
                  "description": "The timeout for a dns check on the provided dns-targets",
                  "required": [],
                  "title": "timeout",
                  "type": "integer"
                }
              },
              "required": [
                "targets",
                "timeout"
              ],
              "title": "dns",
              "type": "object"
            },
            "http": {
              "properties": {
                "targets": {
                  "default": "",
                  "description": "A space delimited list of external targets (\u003chttp://url\u003e or \u003chttps://url\u003e) to attempt an HTTP{S} check on. A 200 HTTP code is considered successful.",
                  "required": [],
                  "title": "targets",
                  "type": "string"
                },
                "timeout": {
                  "default": 500,
                  "description": "The timeout for a http check on the provided http-targets",
                  "required": [],
                  "title": "timeout",
                  "type": "integer"
                }
              },
              "required": [
                "targets",
                "timeout"
              ],
              "title": "http",
              "type": "object"
            },
            "tcp": {
              "properties": {
                "targets": {
                  "default": "",
                  "description": "A space delimited list of external targets (\u003chost\u003e:\u003cport\u003e or \u003cip\u003e:\u003cport\u003e) to attempt a TCP check on",
                  "required": [],
                  "title": "targets",
                  "type": "string"
                },
                "timeout": {
                  "default": 500,
                  "description": "The timeout for a tcp check on the provided tcp-targets",
                  "required": [],
                  "title": "timeout",
                  "type": "integer"
                }
              },
              "required": [
                "targets",
                "timeout"
              ],
              "title": "tcp",
              "type": "object"
            }
          },
          "required": [
            "dns",
            "http",
            "tcp"
          ],
          "title": "externalTargets",
          "type": "object"
        },
        "internalPeers": {
          "properties": {
            "pingNumber": {
              "default": 0,
              "description": "Number of peers to ping. A value of 0 indicates all peers should be pinged",
              "required": [],
              "title": "pingNumber",
              "type": "integer"
            },
            "timeouts": {
              "properties": {
                "check": {
                  "default": "1000ms",
                  "description": "The timeout for a check call to other goldpinger pods",
                  "required": [],
                  "title": "check",
                  "type": "string"
                },
                "checkAll": {
                  "default": "5000ms",
                  "description": "The timeout for a check-all call to other goldpinger pods",
                  "required": [],
                  "title": "checkAll",
                  "type": "string"
                },
                "ping": {
                  "default": "300ms",
                  "description": "The timeout for a ping call to other goldpinger pods",
                  "required": [],
                  "title": "ping",
                  "type": "string"
                }
              },
              "required": [
                "check",
                "checkAll",
                "ping"
              ],
              "title": "timeouts",
              "type": "object"
            }
          },
          "required": [
            "pingNumber",
            "timeouts"
          ],
          "title": "internalPeers",
          "type": "object"
        },
        "ipVersions": {
          "default": "4",
          "description": "The space delimited list of IP versions to use. Possible values are 4 and 6",
          "required": [],
          "title": "ipVersions",
          "type": "string"
        },
        "jitterFactor": {
          "default": 0.05,
          "description": "The amount of jitter to add while pinging clients",
          "required": [],
          "title": "jitterFactor",
          "type": "number"
        },
        "port": {
          "default": 8080,
          "description": "Port where Goldpinger will run",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "refreshInterval": {
          "default": 30,
          "description": "If \u003e 0, will create a thread and collect stats every n seconds",
          "required": [],
          "title": "refreshInterval",
          "type": "integer"
        },
        "zapConfig": {
          "default": "{\n  \"level\": \"info\",\n  \"encoding\": \"json\",\n  \"outputPaths\": [\n      \"stdout\"\n  ],\n  \"errorOutputPaths\": [\n      \"stderr\"\n  ],\n  \"initialFields\": {\n  },\n  \"encoderConfig\": {\n      \"messageKey\": \"message\",\n      \"levelKey\": \"level\",\n      \"levelEncoder\": \"lowercase\",\n      \"timeKey\": \"ts\",\n      \"timeEncoder\": \"ISO8601\",\n      \"callerKey\": \"caller\",\n      \"callerEncoder\": \"Short\"\n  }\n}\n",
          "required": [],
          "title": "zapConfig",
          "type": "string"
        }
      },
      "required": [
        "displayNodename",
        "externalTargets",
        "internalPeers",
        "ipVersions",
        "jitterFactor",
        "port",
        "refreshInterval",
        "zapConfig"
      ],
      "title": "goldpinger",
      "type": "object"
    },
    "grafanaDashboard": {
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable the creation of a Grafana Dashboard",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "folder": {
          "default": "",
          "description": "folder assignment for dashboard",
          "required": [],
          "title": "folder",
          "type": "string"
        },
        "grafanaCom": {
          "properties": {
            "id": {
              "default": 10949,
              "description": "ID of the dashboard from the Grafana marketplace",
              "required": [],
              "title": "id",
              "type": "integer"
            },
            "revision": {
              "default": 1,
              "description": "Revision of the dashboard from the Grafana marketplace",
              "required": [],
              "title": "revision",
              "type": "integer"
            }
          },
          "required": [
            "id",
            "revision"
          ],
          "title": "grafanaCom",
          "type": "object"
        },
        "instanceSelector": {
          "description": "Selects Grafana instances for import",
          "required": [],
          "title": "instanceSelector",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "folder",
        "grafanaCom",
        "instanceSelector"
      ],
      "title": "grafanaDashboard",
      "type": "object"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "default": "Always",
          "description": "image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "image registory",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "bloomberg/goldpinger",
          "description": "image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "3.10.2",
          "description": "Overrides the image tag",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "default": "",
          "required": [],
          "title": "annotations",
          "type": "null"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "livenessProbe": {
      "properties": {
        "failureThreshold": {
          "default": 3,
          "description": "Failure threshold for livenessProbe",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 20,
          "description": "Initial delay seconds for livenessProbe",
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 5,
          "description": "Period seconds for livenessProbe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "description": "Success threshold for livenessProbe",
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "description": "Timeout seconds for livenessProbe",
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [
        "failureThreshold",
        "initialDelaySeconds",
        "periodSeconds",
        "successThreshold",
        "timeoutSeconds"
      ],
      "title": "livenessProbe",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `goldpinger`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to be added to pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "pod-level security context",
      "properties": {
        "fsGroup": {
          "default": 2000,
          "required": [],
          "title": "fsGroup",
          "type": "integer"
        },
        "runAsGroup": {
          "default": 1000,
          "required": [],
          "title": "runAsGroup",
          "type": "integer"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        },
        "runAsUser": {
          "default": 1000,
          "required": [],
          "title": "runAsUser",
          "type": "integer"
        },
        "seccompProfile": {
          "properties": {
            "type": {
              "default": "RuntimeDefault",
              "required": [],
              "title": "type",
              "type": "string"
            }
          },
          "required": [
            "type"
          ],
          "title": "seccompProfile",
          "type": "object"
        }
      },
      "required": [
        "runAsNonRoot",
        "fsGroup",
        "runAsUser",
        "runAsGroup",
        "seccompProfile"
      ],
      "title": "podSecurityContext",
      "type": "object"
    },
    "prometheusRule": {
      "description": "# Custom PrometheusRule to be defined\n# ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions",
      "properties": {
        "enabled": {
          "default": false,
          "description": "Enable a PrometheusRule",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "rules": {
          "description": "List of rules",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "alert": {
                    "default": "goldpinger_nodes_unhealthy",
                    "required": [],
                    "title": "alert",
                    "type": "string"
                  },
                  "annotations": {
                    "properties": {
                      "description": {
                        "default": "Goldpinger instance {{ \"{{ $labels.goldpinger_instance }}\" }} has been reporting unhealthy nodes for at least 5 minutes.\n",
                        "required": [],
                        "title": "description",
                        "type": "string"
                      },
                      "summary": {
                        "default": "Instance {{ \"{{ $labels.instance }}\" }} down",
                        "required": [],
                        "title": "summary",
                        "type": "string"
                      }
                    },
                    "required": [
                      "description",
                      "summary"
                    ],
                    "title": "annotations",
                    "type": "object"
                  },
                  "expr": {
                    "default": "sum(goldpinger_nodes_health_total{job=\"{{ template \"goldpinger.fullname\" . }}\", status=\"unhealthy\"})\nBY (instance, goldpinger_instance) \u003e 0\n",
                    "required": [],
                    "title": "expr",
                    "type": "string"
                  },
                  "for": {
                    "default": "5m",
                    "required": [],
                    "title": "for",
                    "type": "string"
                  },
                  "labels": {
                    "properties": {
                      "severity": {
                        "default": "warning",
                        "required": [],
                        "title": "severity",
                        "type": "string"
                      }
                    },
                    "required": [
                      "severity"
                    ],
                    "title": "labels",
                    "type": "object"
                  }
                },
                "required": [
                  "alert",
                  "expr",
                  "for",
                  "annotations",
                  "labels"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "rules",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "rules"
      ],
      "title": "prometheusRule",
      "type": "object"
    },
    "rbac": {
      "properties": {
        "clusterscoped": {
          "default": true,
          "description": "Create clusterscoped resources",
          "required": [],
          "title": "clusterscoped",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Create RBAC resources",
          "required": [],
          "title": "create",
          "type": "boolean"
        }
      },
      "required": [
        "create",
        "clusterscoped"
      ],
      "title": "rbac",
      "type": "object"
    },
    "readinessProbe": {
      "properties": {
        "failureThreshold": {
          "default": 3,
          "description": "Failure threshold for readinessProbe",
          "required": [],
          "title": "failureThreshold",
          "type": "integer"
        },
        "initialDelaySeconds": {
          "default": 20,
          "description": "Initial delay seconds for readinessProbe",
          "required": [],
          "title": "initialDelaySeconds",
          "type": "integer"
        },
        "periodSeconds": {
          "default": 5,
          "description": "Period seconds for readinessProbe",
          "required": [],
          "title": "periodSeconds",
          "type": "integer"
        },
        "successThreshold": {
          "default": 1,
          "description": "Success threshold for readinessProbe",
          "required": [],
          "title": "successThreshold",
          "type": "integer"
        },
        "timeoutSeconds": {
          "default": 5,
          "description": "Timeout seconds for readinessProbe",
          "required": [],
          "title": "timeoutSeconds",
          "type": "integer"
        }
      },
      "required": [
        "failureThreshold",
        "initialDelaySeconds",
        "periodSeconds",
        "successThreshold",
        "timeoutSeconds"
      ],
      "title": "readinessProbe",
      "type": "object"
    },
    "resources": {
      "description": "Resource limits and requests for the headwind pods.",
      "properties": {
        "limits": {
          "properties": {
            "memory": {
              "default": "80Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [
            "memory"
          ],
          "title": "limits",
          "type": "object"
        },
        "requests": {
          "properties": {
            "cpu": {
              "default": "1m",
              "required": [],
              "title": "cpu",
              "type": "string"
            },
            "memory": {
              "default": "40Mi",
              "required": [],
              "title": "memory",
              "type": "string"
            }
          },
          "required": [
            "cpu",
            "memory"
          ],
          "title": "requests",
          "type": "object"
        }
      },
      "required": [
        "limits",
        "requests"
      ],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "The number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "securityContext": {
      "description": "container-level security context",
      "properties": {
        "allowPrivilegeEscalation": {
          "default": false,
          "required": [],
          "title": "allowPrivilegeEscalation",
          "type": "boolean"
        },
        "capabilities": {
          "properties": {
            "drop": {
              "items": {
                "anyOf": [
                  {
                    "required": [],
                    "type": "string"
                  }
                ],
                "required": []
              },
              "required": [],
              "title": "drop",
              "type": "array"
            }
          },
          "required": [
            "drop"
          ],
          "title": "capabilities",
          "type": "object"
        },
        "readOnlyRootFilesystem": {
          "default": true,
          "required": [],
          "title": "readOnlyRootFilesystem",
          "type": "boolean"
        },
        "runAsNonRoot": {
          "default": true,
          "required": [],
          "title": "runAsNonRoot",
          "type": "boolean"
        }
      },
      "required": [
        "capabilities",
        "allowPrivilegeEscalation",
        "readOnlyRootFilesystem",
        "runAsNonRoot"
      ],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "properties": {
        "port": {
          "default": 8080,
          "description": "Kubernetes port where service is exposed",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Kubernetes service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "properties": {
        "additionalLabels": {
          "description": "Prometheus ServiceMonitor labels",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable a Prometheus ServiceMonitor",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "30s",
          "description": "prometheus: kube-prometheus\nPrometheus ServiceMonitor interval",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "metricRelabelings": {
          "description": "Prometheus [MetricRelabelConfigs] to apply to samples before ingestion",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "namespace": {
          "default": "",
          "description": "Prometheus ServiceMonitor namespace",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "relabelings": {
          "description": "Prometheus [RelabelConfigs] to apply to samples before scraping",
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "selector": {
          "description": "release: prometheus\nPrometheus ServiceMonitor selector",
          "required": [],
          "title": "selector",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "additionalLabels",
        "selector",
        "interval",
        "namespace",
        "metricRelabelings",
        "relabelings"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "tolerations": {
      "description": "Toleration labels for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "image",
    "imagePullSecrets",
    "revisionHistoryLimit",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "service",
    "livenessProbe",
    "readinessProbe",
    "ingress",
    "resources",
    "nodeSelector",
    "tolerations",
    "affinity",
    "extraEnv",
    "rbac",
    "goldpinger",
    "serviceMonitor",
    "prometheusRule",
    "grafanaDashboard"
  ],
  "type": "object"
}
