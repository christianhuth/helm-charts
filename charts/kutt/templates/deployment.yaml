apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kutt.fullname" . }}
  labels:
    {{- include "kutt.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "kutt.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kutt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "kutt.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            {{- toYaml .Values.env | nindent 12 }}
            # Mail Settings
            - name: MAIL_HOST
              value: {{ .Values.mail.host }}
            - name: MAIL_PORT
              value: {{ .Values.mail.port | quote }}
            - name: MAIL_SECURE
              value: {{ .Values.mail.secure | quote }}
            - name: MAIL_USER
              value: {{ .Values.mail.username }}
            - name: MAIL_PASSWORD
              {{- if .Values.mail.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.mail.existingSecret }}
                  key: MAIL_PASSWORD
              {{- else }}
              value: {{ .Values.mail.password }}
              {{- end }}
            # Google Settings
            - name: GOOGLE_SAFE_BROWSING_KEY
              {{- if .Values.envSecrets.google.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecrets.google.existingSecret }}
                  key: GOOGLE_SAFE_BROWSING_KEY
              {{- else }}
              value: {{ .Values.envSecrets.google.safeBrowsingKey }}
              {{- end }}
            - name: GOOGLE_ANALYTICS
              {{- if .Values.envSecrets.google.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecrets.google.existingSecret }}
                  key: GOOGLE_ANALYTICS
              {{- else }}
              value: {{ .Values.envSecrets.google.analytics }}
              {{- end }}
            - name: GOOGLE_ANALYTICS_UNIVERSAL
              {{- if .Values.envSecrets.google.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecrets.google.existingSecret }}
                  key: GOOGLE_ANALYTICS_UNIVERSAL
              {{- else }}
              value: {{ .Values.envSecrets.google.analyticsUniversal }}
              {{- end }}
            # JWT Settings
            - name: JWT_SECRET
              {{- if .Values.envSecrets.jwt.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.envSecrets.jwt.existingSecret }}
                  key: JWT_SECRET
              {{- else }}
              value: {{ .Values.envSecrets.jwt.key }}
              {{- end }}
            # Database Settings
            {{- if .Values.postgresql.enabled }}
            - name: DB_HOST
              value: {{ include "postgresql.primary.fullname" .Subcharts.postgresql }}
            - name: DB_PORT
              value: {{ include "postgresql.service.port" .Subcharts.postgresql | quote }}
            - name: DB_NAME
              value: {{ include "postgresql.database" .Subcharts.postgresql }}
            - name: DB_USER
              value: {{ include "postgresql.username" .Subcharts.postgresql }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "postgresql.secretName" .Subcharts.postgresql }}
                  key: {{ include "postgresql.userPasswordKey" .Subcharts.postgresql }}
            - name: DB_SSL
              value: "false"
            {{- else }}
            - name: DB_HOST
              value: {{ .Values.postgresql.auth.hostname }}
            - name: DB_PORT
              value: {{ .Values.postgresql.auth.port | quote }}
            - name: DB_NAME
              value: {{ .Values.postgresql.auth.database }}
            - name: DB_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: DB_PASSWORD
              {{- if .Values.postgresql.auth.existingSecret }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.auth.existingSecret }}
                  key: db_password
              {{- else }}
              value: {{ .Values.postgresql.auth.password }}
              {{- end }}
            {{- end }}
            # Redis Settings
            {{- if .Values.redis.enabled }}
            - name: REDIS_HOST
              value: {{ printf "%s-master" (include "common.names.fullname" .Subcharts.redis) }}
            - name: REDIS_PORT
              value: {{ .Values.redis.master.service.ports.redis | quote }}
            {{- if .Values.redis.auth.enabled }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "redis.secretName" .Subcharts.redis }}
                  key: {{ include "redis.secretPasswordKey" .Subcharts.redis }}
            {{- end }}
            {{- end }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
