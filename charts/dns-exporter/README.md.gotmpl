{{ template "chart.header" . }}
{{ template "chart.description" . }}

## TL;DR;

```console
helm repo add christianhuth https://charts.christianhuth.de
helm repo update
helm install my-release christianhuth/dns-exporter
```

## Introduction

This chart bootstraps the [Prometheus DNS-Exporter](https://github.com/tykling/dns_exporter) using the [Helm](https://helm.sh) package manager.

## Prerequisites

- Kubernetes 1.19+

## Installing the Chart

To install the chart with the release name `my-release`:

```console
helm repo add christianhuth https://charts.christianhuth.de
helm repo update
helm install my-release christianhuth/dns-exporter
```

These commands deploy the DNS-Exporter on the Kubernetes cluster in the default configuration. The [Values](#values) section lists the values that can be configured during installation.

> **Tip**: List all releases using `helm list`

### Defining Scrape Targets

This Helm Charts allows you to create two ServiceMonitors:

- One for the metrics of the DNS-Exporter itself
- One for the DNS metrics of the targets

The Scrape Targets can be configured using `.serviceMonitor.targetsMonitor.targets`.
For each Scrape Target we need to define at least the DNS server and ip family (`ipv4` or `ipv6`).
You also have to define the family if you are scraping DNS records unrelated to the ip address type like NS.

A basic example would look like this:

```yaml
serviceMonitor:
  targetsMonitor:
    targets:
      - query_name:
          - christianhuth.de
        family:
          - ipv4
        server:
          - dns.google
```

While this looks like you can define multiple values for the attributes, this is sadly not supported by the DNS-Exporter.
Defining multiple values will result in only the first value taking affect.

There are more attributes you can define for each target.
A complete list can be found [https://dns-exporter.readthedocs.io/latest/configuration.html#settings](in the official documentation).

Instead of defining all the attributes (like family, server, ...) for each target again, you can use pre-defined modules or define your own ones using .Values.serviceMonitor.modules.

```yaml
serviceMonitor:
  modules:
    google_udp:
      family: ipv4
      protocol: udp
      server: dns.google
      query_type: NS
  targetsMonitor:
    targets:
      - query_name:
          - christianhuth.de
        module:
          - google_udp
```

This will result in a query for the NS records of christianhuth.de using the DNS server dns.google with the UDP protocol.
In this example, the ip family is only defined, because DNS-Exporter won't work without defining one.

## Uninstalling the Chart

To uninstall the `my-release` deployment:

```console
helm uninstall my-release
```

The command removes all the Kubernetes components associated with the chart and deletes the release.

{{ template "chart.valuesSection" . }}

Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`.

Alternatively, a YAML file that specifies the values for the parameters can be provided while installing the chart. For example,

```console
helm install my-release -f values.yaml christianhuth/dns-exporter
```
