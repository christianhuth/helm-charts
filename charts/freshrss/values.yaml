# -- Provide a name in place of `freshrss`
nameOverride: ""
# -- String to fully override `"freshrss.fullname"`
fullnameOverride: ""

image:
  # -- image registry
  registry: docker.io
  # -- image repository
  repository: freshrss/freshrss
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  tag: "1.27.0"
  # -- Define which type of image should be used. Supported values are alpine and debian.
  type: "alpine"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Number of replicas
replicaCount: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 10

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to be added to exporter pods
podAnnotations: {}

# -- pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# -- container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- ip to resolve public uri behind reverse proxy
  ip: ""
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the freshrss pods.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

freshrss:
  # -- URL under which FreshRSS will be available. Will use the first Ingress host if Ingress is enabled with `ingress.enabled`.
  baseUrl: ""
  cronjob:
    # -- How to run the CronJob to synchronize your Feeds. Supported values are internal and sidecar.
    type: internal
    # -- Minutes to run an automatic cronjob to refresh feeds
    minutes: "1,31"
  database:
    # -- Database type to use. Supported values are sqlite and postgresql.
    type: sqlite
  # -- Enables additional development information if set to development (increases the level of logging and ensures that errors are displayed).
  environment: production
  initialization:
    # -- Use Auto-install for initialization. Make sure to set this to false once the initialization is done.
    enabled: true
    admin:
      # -- API Password of admin user. Will only be used if initialization is activated.
      apiPassword: ""
      # -- Email of admin user. Will only be used if initialization is activated.
      email: ""
      # -- Password of admin user. Will only be used if initialization is activated.
      password: ""
      # -- Username of admin user. Will only be used if initialization is activated.
      username: admin
    # -- enable the FreshRSS API. Will only be used if initialization is activated.
    apiEnabled: true
    # -- Language of the FreshRSS UI. Will only be used if initialization is activated.
    language: en
  persistence:
    # -- Enable persistence for FreshRSS data
    enabled: true
    # -- Add annotations to the different FreshRSS PVCs
    annotations: {}
    data:
      # -- Enable persistence for the data folder
      enabled: true
      # -- Add annotations to the PVC for the data folder
      annotations: {}
      # -- Access Modes for the PVC for the data folder
      accessModes:
        - ReadWriteOnce
      # -- Use an existing claim as PVC for the data folder
      existingClaim: ""
      # -- Define the size of the PVC for the data folder
      size: 5Gi
      # -- Define the storage class of the PVC for the data folder
      storageClass: ""
    extensions:
      # -- Enable persistence for the extensions folder
      enabled: true
      # -- Add annotations to the PVC for the extensions folder
      annotations: {}
      # -- Access Modes for the PVC for the extensions folder
      accessModes:
        - ReadWriteOnce
      # -- Use an existing claim as PVC for the extensions folder
      existingClaim: ""
      # -- Define the size of the PVC for the extensions folder
      size: 5Gi
      # -- Define the storage class of the PVC for the extensions folder
      storageClass: ""
    # -- Define the storage class for the different FreshRSS PVCs
    storageClass: ""
  # -- Timezone
  timezone: "Europe/Berlin"

postgresql:
  # -- enable PostgreSQLâ„¢ subchart from Bitnami
  enabled: false
  ## Authentication parameters
  auth:
    # -- Name for a custom database to create
    database: ""
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""
    # -- Password for the custom user to create. Ignored if postgresql.auth.existingSecret is provided
    password: ""
    # -- Name for a custom user to create
    username: ""

externalPostgresql:
  ## Authentication parameters
  auth:
    # -- Name of the database to use
    database: ""
    # -- Name of existing secret to use for PostgreSQL credentials
    existingSecret: ""
    # -- Password to use
    password: ""
    # -- Name of the user to use
    username: ""
    # -- Key in the secret containing the password
    userPasswordKey: ""
  # -- Hostname of the PostgreSQL database
  hostname: ""
  # -- Port used to connect to PostgreSQL database
  port: 5432
