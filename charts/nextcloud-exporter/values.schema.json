{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "description": "Affinity settings for pod assignment",
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "autoscaling": {
      "properties": {
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "maxReplicas": {
          "default": 100,
          "required": [],
          "title": "maxReplicas",
          "type": "integer"
        },
        "minReplicas": {
          "default": 1,
          "required": [],
          "title": "minReplicas",
          "type": "integer"
        },
        "targetCPUUtilizationPercentage": {
          "default": 80,
          "required": [],
          "title": "targetCPUUtilizationPercentage",
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "minReplicas",
        "maxReplicas",
        "targetCPUUtilizationPercentage"
      ],
      "title": "autoscaling",
      "type": "object"
    },
    "config": {
      "properties": {
        "exporter": {
          "properties": {
            "appMetrics": {
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable gathering of apps-related metrics",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "appMetrics",
              "type": "object"
            },
            "port": {
              "default": 9205,
              "description": "The port the exporter will listen on",
              "required": [],
              "title": "port",
              "type": "integer"
            },
            "timeout": {
              "default": "5s",
              "description": "Timeout for getting server info document",
              "required": [],
              "title": "timeout",
              "type": "string"
            },
            "updateMetrics": {
              "properties": {
                "enabled": {
                  "default": true,
                  "description": "Enable gathering of system update-related metrics.",
                  "required": [],
                  "title": "enabled",
                  "type": "boolean"
                }
              },
              "required": [
                "enabled"
              ],
              "title": "updateMetrics",
              "type": "object"
            }
          },
          "required": [
            "appMetrics",
            "updateMetrics",
            "port",
            "timeout"
          ],
          "title": "exporter",
          "type": "object"
        },
        "nextcloud": {
          "properties": {
            "auth": {
              "properties": {
                "existingSecret": {
                  "default": "",
                  "description": "Name of existing secret to use for nextcloud authentication. Key in secret needs to be `nextcloud-token`.",
                  "required": [],
                  "title": "existingSecret",
                  "type": "string"
                },
                "password": {
                  "default": "",
                  "description": "Password for connecting to Nextcloud",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "token": {
                  "default": "",
                  "description": "Authentication token",
                  "required": [],
                  "title": "token",
                  "type": "string"
                },
                "type": {
                  "default": "token",
                  "description": "Define how to authenticate against Nextcloud. Supported values are basic and token.",
                  "required": [],
                  "title": "type",
                  "type": "string"
                },
                "username": {
                  "default": "",
                  "description": "Username for connecting to Nextcloud",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "existingSecret",
                "password",
                "token",
                "username"
              ],
              "title": "auth",
              "type": "object"
            },
            "server": {
              "default": "",
              "description": "The URL to Nextcloud server including the scheme",
              "required": [],
              "title": "server",
              "type": "string"
            },
            "tlsSkipVerify": {
              "default": false,
              "description": "Skip certificate verification of Nextcloud server",
              "required": [],
              "title": "tlsSkipVerify",
              "type": "boolean"
            }
          },
          "required": [
            "auth",
            "server",
            "tlsSkipVerify"
          ],
          "title": "nextcloud",
          "type": "object"
        }
      },
      "required": [
        "exporter",
        "nextcloud"
      ],
      "title": "config",
      "type": "object"
    },
    "extraEnv": {
      "description": "additional environment variables to be added to the pods",
      "items": {
        "required": []
      },
      "required": [],
      "title": "extraEnv",
      "type": "array"
    },
    "fullnameOverride": {
      "default": "",
      "description": "String to fully override `\"nextcloud-exporter.fullname\"`",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "properties": {
        "pullPolicy": {
          "default": "Always",
          "description": "image pull policy",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "registry": {
          "default": "docker.io",
          "description": "image registry",
          "required": [],
          "title": "registry",
          "type": "string"
        },
        "repository": {
          "default": "xperimental/nextcloud-exporter",
          "description": "image repository",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "0.9.0",
          "description": "Overrides the image tag",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [
        "registry",
        "repository",
        "pullPolicy",
        "tag"
      ],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "If defined, uses a Secret to pull an image from a private Docker registry or repository.",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "properties": {
        "annotations": {
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [
                            "path",
                            "pathType"
                          ],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [
                  "host",
                  "paths"
                ],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [
        "enabled",
        "className",
        "annotations",
        "hosts",
        "tls"
      ],
      "title": "ingress",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "Provide a name in place of `nextcloud-exporter`",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "description": "Node labels for pod assignment",
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "description": "Annotations to be added to pods",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podSecurityContext": {
      "description": "pod-level security context",
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "Number of replicas",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "description": "Resource limits and requests for the headwind pods.",
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "revisionHistoryLimit": {
      "default": 10,
      "description": "The number of old ReplicaSets to retain",
      "required": [],
      "title": "revisionHistoryLimit",
      "type": "integer"
    },
    "securityContext": {
      "description": "container-level security context",
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "properties": {
        "port": {
          "default": 80,
          "description": "Kubernetes port where service is exposed",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "Kubernetes service type",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [
        "type",
        "port"
      ],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [
        "create",
        "annotations",
        "name"
      ],
      "title": "serviceAccount",
      "type": "object"
    },
    "serviceMonitor": {
      "properties": {
        "additionalLabels": {
          "description": "Prometheus ServiceMonitor labels",
          "required": [],
          "title": "additionalLabels",
          "type": "object"
        },
        "enabled": {
          "default": false,
          "description": "Enable a prometheus ServiceMonitor",
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "interval": {
          "default": "30s",
          "description": "prometheus: kube-prometheus\nPrometheus ServiceMonitor interval",
          "required": [],
          "title": "interval",
          "type": "string"
        },
        "metricRelabelings": {
          "description": "Prometheus [MetricRelabelConfigs] to apply to samples before ingestion",
          "items": {
            "required": []
          },
          "required": [],
          "title": "metricRelabelings",
          "type": "array"
        },
        "namespace": {
          "default": "",
          "description": "Prometheus ServiceMonitor namespace",
          "required": [],
          "title": "namespace",
          "type": "string"
        },
        "relabelings": {
          "description": "Prometheus [RelabelConfigs] to apply to samples before scraping",
          "items": {
            "required": []
          },
          "required": [],
          "title": "relabelings",
          "type": "array"
        },
        "selector": {
          "description": "release: prometheus\nPrometheus ServiceMonitor selector",
          "required": [],
          "title": "selector",
          "type": "object"
        }
      },
      "required": [
        "enabled",
        "additionalLabels",
        "selector",
        "interval",
        "namespace",
        "metricRelabelings",
        "relabelings"
      ],
      "title": "serviceMonitor",
      "type": "object"
    },
    "tolerations": {
      "description": "Toleration labels for pod assignment",
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [
    "nameOverride",
    "fullnameOverride",
    "image",
    "imagePullSecrets",
    "replicaCount",
    "revisionHistoryLimit",
    "serviceAccount",
    "podAnnotations",
    "podSecurityContext",
    "securityContext",
    "service",
    "ingress",
    "resources",
    "autoscaling",
    "nodeSelector",
    "tolerations",
    "affinity",
    "extraEnv",
    "config",
    "serviceMonitor"
  ],
  "type": "object"
}
