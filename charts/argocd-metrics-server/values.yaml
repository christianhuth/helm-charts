# -- Provide a name in place of `argocd-extension-metrics`
nameOverride: ""

# -- String to fully override `"argocd-extension-metrics.fullname"`
fullnameOverride: ""

image:
  # -- image registory
  registry: quay.io
  # -- image repository
  repository: argoprojlabs/argocd-extension-metrics
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  tag: "v1.0.3"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Number of replicas
replicaCount: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 0

# -- pod-level security context
podSecurityContext: {}
  # if you are using direct host access to the certificates you probably need to run the pod as root
  # fsGroup: 0
  # runAsGroup: 0
  # runAsUser: 0

# -- Resource limits and requests for the controller pods.
resources:
  requests:
    cpu: 100m
    memory: 100Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- container-level security context
securityContext: {}
  # capabilities:nodeSelector:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 9003

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

# -- additional environment variables to be added to the pods
extraEnv: []

networkPolicy:
  # --- create a NetworkPolicy resource to limit the allowed traffic
  enabled: false
  # -- Annotations to be added to the NetworkPolicies
  additionalAnnotations: {}
  # -- Labels to be added to the NetworkPolicies
  additionalLabels: {}
  argocd:
    # --- allow incoming traffic from Argo CD
    enabled: true
    # -- The labels of the namespace where Argo CD is running
    namespaceSelector: {}
    # -- The labels of the Argo CD Pods
    podSelector: {}
  dns:
    # -- allow outgoing traffic to the Kubernetes DNS
    enabled: true
    # -- The labels of the namespace where the Kubernetes DNS is running
    namespaceSelector:
      kubernetes.io/metadata.name: kube-system
    # -- The labels of the Kubernetes DNS Pods
    podSelector:
      k8s-app: kube-dns
  prometheus:
    # --- allow outgoing traffic to Prometheus
    enabled: true
    # -- The labels of the Prometheus Pods
    podSelector:
      app.kubernetes.io/name: prometheus

prometheus:
  # -- The dashboards that will be displayed in the Argo CD UI
  # @default -- see [values.yaml](./values.yaml)
  dashboards: |
    {
      "groupKind": "pod",
      "tabs": ["Golden Signal"],
      "rows": [
        {
          "name": "pod",
          "title": "Pods",
          "tab": "Golden Signal",
          "graphs": [
            {
              "name": "pod_cpu_line",
              "title": "CPU",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_cpu_pie",
              "title": "CPU Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_line",
              "title": "Memory",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_pie",
              "title": "Mem Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            }
          ]
        },
        {
          "name": "container",
          "title": "Containers",
          "tab": "Golden Signal",
          "graphs": [
            {
              "name": "container_cpu_line",
              "title": "CPU",
              "description": "",
              "graphType": "line",
              "metricName": "container",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (container)"
            },
            {
              "name": "container_cpu_pie",
              "title": "CPU Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "container",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", image!=\"\",container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (container)"
            },
            {
              "name": "container_memory_line",
              "title": "Memory",
              "description": "",
              "graphType": "line",
              "metricName": "container",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (container)"
            },
            {
              "name": "container_memory_pie",
              "title": "Mem Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "container",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (container)"
            }
          ]
        }
      ]
    },
    {
      "groupKind": "deployment",
      "tabs": ["Golden Signal"],
      "rows": [
          {
            "name": "httplatency",
            "title": "HTTP Latency",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_200_latency",
                "title": "Latency",
                "description": "",
                "graphType": "line",
                "metricName": "pod_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_sum {namespace=\"{{.namespace}}\", status=\"200\"} [1m])) by (pod_template_hash)"
              }
            ]
          },
          {
            "name": "httperrortate",
            "title": "HTTP Error Rate",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_error_rate_500",
                "title": "HTTP Error 500",
                "description": "",
                "graphType": "line",
                "metricName": "pod_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\", status=\"500\"} [1m])) by (pod_template_hash)"
              },
              {
                "name": "http_error_rate_400",
                "title": "HTTP Error 400",
                "description": "",
                "graphType": "line",
                "metricName": "pod_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\", status=\"404\"} [1m])) by (pod_template_hash)"
              }
            ]
          },
          {
            "name": "httptraffic",
            "title": "HTTP Traffic",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_traffic",
                "title": "Traffic",
                "description": "",
                "graphType": "line",
                "metricName": "pod_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\"} [1m])) by (pod_template_hash)"
              }
            ]
          },
        {
          "name": "pod",
          "title": "Pods",
          "tab": "Golden Signal",
          "graphs": [
            {
              "name": "pod_cpu_line",
              "title": "CPU",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_cpu_pie",
              "title": "CPU Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_line",
              "title": "Memory",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_pie",
              "title": "Mem Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            }
          ]
        }
      ]
    },
    {
      "groupKind": "rollout",
      "tabs": ["Golden Signal"],
      "rows": [
          {
            "name": "httplatency",
            "title": "HTTP Latency",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_200_latency",
                "title": "Latency",
                "description": "",
                "graphType": "line",
                "metricName": "rollout_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_sum {namespace=\"{{.namespace}}\", status=\"200\"} [1m])) by (rollout_template_hash)"
              }
            ]
          },
          {
            "name": "httperrortate",
            "title": "HTTP Error Rate",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_error_rate_500",
                "title": "HTTP Error 500",
                "description": "",
                "graphType": "line",
                "metricName": "rollout_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\", status=\"500\"} [1m])) by (rollout_template_hash)"
              },
              {
                "name": "http_error_rate_400",
                "title": "HTTP Error 400",
                "description": "",
                "graphType": "line",
                "metricName": "rollout_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\", status=\"404\"} [1m])) by (rollout_template_hash)"
              }
            ]
          },
          {
            "name": "httptraffic",
            "title": "HTTP Traffic",
            "tab": "Golden Signal",
            "graphs": [
              {
                "name": "http_traffic",
                "title": "Traffic",
                "description": "",
                "graphType": "line",
                "metricName": "rollout_template_hash",
                "queryExpression": "sum(rate(http_server_requests_seconds_count {namespace=\"{{.namespace}}\"} [1m])) by (rollout_template_hash)"
              }
            ]
          },
        {
          "name": "pod",
          "title": "Pods",
          "tab": "Golden Signal",
          "graphs": [
            {
              "name": "pod_cpu_line",
              "title": "CPU",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", image!=\"\", container!=\"POD\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_cpu_pie",
              "title": "CPU Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_cpu_usage_seconds_total{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_line",
              "title": "Memory",
              "description": "",
              "graphType": "line",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            },
            {
              "name": "pod_memory_pie",
              "title": "Mem Avg",
              "description": "",
              "graphType": "pie",
              "metricName": "pod",
              "queryExpression": "sum(rate(container_memory_usage_bytes{pod=~\"{{.name}}\", container!=\"POD\", image!=\"\", container!=\"\", container_name!=\"POD\"}[5m])) by (pod)"
            }
          ]
        }
      ]
    }
  # -- The namespace where Prometheus is running
  namespace: monitoring
  # -- The port on which the Prometheus service is listening for traffic
  port: 9090
  # -- The name of the Prometheus service
  service: prometheus-operated
  # -- The path of the Prometheus
  path: ""
