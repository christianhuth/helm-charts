{{- if not .Values.proxysql.configmap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "proxysql.fullname" . }}
data:
  proxysql.cnf: |
    admin_variables=
    {
      {{- if not .Values.proxysql.cluster.enabled }}
      admin_credentials="{{ .Values.proxysql.admin.user }}:{{ .Values.proxysql.admin.password }}"
      {{- else }}
      admin_credentials="{{ .Values.proxysql.admin.user }}:{{ .Values.proxysql.admin.password }};{{ .Values.proxysql.cluster.user }}:{{ .Values.proxysql.cluster.password }}"
      cluster_username="{{ .Values.proxysql.cluster.user }}"
      cluster_password="{{ .Values.proxysql.cluster.password }}"
      {{- end }}
      prometheus_memory_metrics_interval={{ .Values.proxysql.restapi.memoryMetricsInterval }}
      restapi_enabled={{ .Values.proxysql.restapi.enabled }}
      {{- if .Values.proxysql.restapi.enabled }}
      restapi_port={{ .Values.proxysql.restapi.port }}
      {{- end }}
      {{- if .Values.proxysql.web.enabled }}
      web_enabled={{ .Values.proxysql.web.enabled }}
      stats_credentials="{{ .Values.proxysql.web.user }}:{{ .Values.proxysql.web.password }}"
      web_port={{ .Values.proxysql.web.port }}
      {{- end }}
    }

    mysql_variables=
    {
      interfaces="0.0.0.0:{{ .Values.proxysql.mysql.port }}"
      max_transaction_idle_time=28800000
      max_transaction_time=28800000
      {{- if not .Values.proxysql.monitor.enabled }}
      monitor_enabled={{ .Values.proxysql.monitor.enabled }}
      {{- end }}
      {{- if .Values.proxysql.monitor.enabled }}
      monitor_connect_interval=30000
      monitor_connect_timeout=1000
      {{- if .Values.proxysql.mysql.galera.enabled }}
      {{- if not .Values.proxysql.mysql.slave.enabled }}
      monitor_galera_healthcheck_interval=5000
      monitor_galera_healthcheck_timeout=1000
      {{- end }}
      {{- end }}
      monitor_local_dns_cache_refresh_interval=0
      monitor_local_dns_cache_ttl=0
      monitor_password={{ required "monitor password is required!" .Values.proxysql.monitor.password | b64dec | toJson }}
      monitor_ping_interval=5000
      monitor_username="{{ required "monitor user name is required!" .Values.proxysql.monitor.user }}"
      {{- end }}
      server_version="{{ .Values.proxysql.mysql.version }}"
      tcp_keepalive_time={{ .Values.proxysql.mysql.tcp.keepaliveTime }}
      use_tcp_keepalive="true"
    }

    {{- if .Values.proxysql.cluster.enabled }}
    proxysql_servers=
    (
      {{- $fullname := include "proxysql.fullname" . -}}
      {{- $namespace := .Release.Namespace -}}
      {{- $replicaCount := (int .Values.replicaCount) -}}
      {{- $proxysqlPort := .Values.proxysql.port -}}
      {{- range $index, $element := until $replicaCount }}
      {
        hostname="{{- $fullname -}}-{{- (toString $index) -}}.{{- $fullname -}}.{{- $namespace -}}"
        port={{ $proxysqlPort }}
      }{{- if lt (add1 $element) $replicaCount -}},{{- end -}}
      {{- end }}
    )
    {{- end }}

    {{- if .Values.proxysql.mysql.servers }}
    mysql_servers=
    (
      {{- range $server := .Values.proxysql.mysql.servers }}
      {
        hostgroup_id={{ $server.hostgroupId | toJson }}
        hostname={{ $server.address | toJson }}
        port=3306
      },
      {{- end }}
    )
    {{- end }}

    {{- if .Values.proxysql.mysql.slave.enabled }}
    {{- if not .Values.proxysql.mysql.galera.enabled }}
    mysql_replication_hostgroups=
    (
      {
        writer_hostgroup=1
        reader_hostgroup=2
        check_type="{{ .Values.proxysql.mysql.slave.checkType }}"
      }
    )
    {{- end }}
    {{- end }}

    {{- if .Values.proxysql.mysql.galera.enabled }}
    {{- if not .Values.proxysql.mysql.slave.enabled }}
    mysql_galera_hostgroups=
    (
      {
        writer_hostgroup=1
        backup_writer_hostgroup=2
        reader_hostgroup=3
        offline_hostgroup=4
        active=1
        max_writers={{ .Values.proxysql.mysql.galera.maxWriters }}
        writer_is_also_reader={{ int .Values.proxysql.mysql.galera.writerAsReader }}
      }
    )
    {{- end }}
    {{- end }}

    {{- if .Values.proxysql.mysql.users }}
    mysql_users=
    (
      {{- range $user := .Values.proxysql.mysql.users }}
      {
        username={{ $user.username | toJson }}
        password={{ $user.password | b64dec | toJson }}
        default_hostgroup={{ $user.defaultHostgroup | toJson }}
        transaction_persistent=1
      },
      {{- end }}
    )
    {{- end }}

    mysql_query_rules=
    (

    )
    {{- end }}
  healthcheck.sh: |
    {{- tpl (.Files.Get "files/healthcheck.sh") . | nindent 4 }}
  status.sh: |
    {{- tpl (.Files.Get "files/status.sh") . | nindent 4 }}
