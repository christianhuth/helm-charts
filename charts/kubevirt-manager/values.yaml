# -- Provide a name in place of `kubevirt-manager`
nameOverride: ""

# -- String to fully override `"kubevirt-manager.fullname"`
fullnameOverride: ""

image:
  # -- image registory
  registry: docker.io
  # -- image repository
  repository: kubevirtmanager/kubevirt-manager
  # -- image pull policy
  pullPolicy: Always
  # -- Overrides the image tag
  tag: "1.5.3"

# -- If defined, uses a Secret to pull an image from a private Docker registry or repository.
imagePullSecrets: []

# -- Number of replicas
replicaCount: 1

# -- The number of old ReplicaSets to retain
revisionHistoryLimit: 0

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- Annotations to be added to exporter pods
podAnnotations: {}

# -- pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# -- container-level security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 10000
  runAsGroup: 30000
  seccompProfile:
    type: RuntimeDefault

service:
  # -- Kubernetes service type
  type: ClusterIP
  # -- Kubernetes port where service is exposed
  port: 8080

ingress:
  # -- Enable ingress record generation
  enabled: false
  basicAuth:
    # -- enable the configuration of basic authentication with nginx
    enabled: false
    # -- An existing Secret containing the username and password for basic authentication. Username and password have to be base64 encoded in the form username:password. The Secret needs to contain a key `.htpasswd` with the base64 encoded authentication information. If set `ingress.basicAuth.username` and `ingress.basicAuth.password` will be ignored.
    existingSecret: ""
    # -- Username for authentication
    username: "admin"
    # -- Password for authentication
    password: "password"
  # -- IngressClass that will be be used to implement the Ingress
  className: ""
  # -- Additional annotations for the Ingress resource
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- An array with the hosts configuration
  # @default -- see [values.yaml](./values.yaml)
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  # -- An array with the tls configuration
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Resource limits and requests for the pods.
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  # -- Enable Horizontal POD autoscaling
  enabled: false
  # -- Minimum number of replicas
  minReplicas: 1
  # -- Maximum number of replicas
  maxReplicas: 100
  # -- Target CPU utilization percentage
  targetCPUUtilizationPercentage: 80
  # -- Target Memory utilization percentage
  # targetMemoryUtilizationPercentage: 80

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity settings for pod assignment
affinity: {}

# -- additional environment variables to be added to the pods
extraEnv: []
  # - name: FOO
  #   value: BAR

prometheus:
   # -- Enable a Prometheus ServiceMonitor
  enabled: false
  # -- Prometheus ServiceMonitor labels
  additionalLabels: {}
    # release: prometheus
  # -- Prometheus ServiceMonitor selector
  selector: {}
    # prometheus: kube-prometheus
  # -- Prometheus ServiceMonitor interval
  interval: 30s
  # -- Prometheus ServiceMonitor namespace
  namespace: ""
  # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
  metricRelabelings: []
  # -- Prometheus [RelabelConfigs] to apply to samples before scraping
  relabelings: []
  service:
    # -- Name of the Prometheus Service
    name: ""
    # -- Namespace of the Prometheus Service
    namespace: ""
    # -- Port of the Prometheus Service
    port: ""
